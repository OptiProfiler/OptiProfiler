name: test-matlab

on:
  push:
    branches: [matlab]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Clone MatCUTEst
        uses: actions/checkout@v4
        with:
          repository: matcutest/matcutest_compiled
          path: matcutest
        
      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/link_gfortran ${{ env.GFORTRAN_VERSION }}

      - name: Check MATLAB
        id: check_matlab
        run: if type 'matlab' &> /dev/null ; then echo "::set-output name=has_matlab::true" ; fi

      - name: Cache MATLAB  # N.B.: Clear the cache when the `latest` version of MATLAB changes in March and September
        uses: actions/cache@v3.3.2
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}

      - name: Set up MATLAB with optimization toolbox
        if: ${{ matrix.with_optim_toolbox == 'yes' }}
        uses: matlab-actions/setup-matlab@v2-beta
        with:
          release: ${{ matrix.matlab }}
          products: Optimization_Toolbox

      - name: Install MatCUTEst
        uses: matlab-actions/run-command@v1.2.3
        with:
          command: |
            root_dir = pwd();

            % Install MatCUTEst
            cd(fullfile(root_dir, 'matcutest')); install(); cd(root_dir);

            % Check the installation
            help matcutest, which('macup'), which('decup'), which('secup')

      - name: Run MATLAB Tests
        uses: matlab-actions/run-tests@v0
        with:
          source-folder: 'matlab/OptiProfiler/src'
          code-coverage-cobertura: 'coverage.xml'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml