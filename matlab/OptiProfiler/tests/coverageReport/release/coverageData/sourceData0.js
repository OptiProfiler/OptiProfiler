var sourceData0 = {"FileName":"/Users/huangcunxin/Work/Research/Performance_profile/OptiProfiler/matlab/OptiProfiler/src/Problem.m","RawFileContents":["classdef Problem","    %{","    Optimization problem.","    %}","","    %{","    Initialize an optimization problem.","","    Parameters","    ----------","    fun : callable","        Objective function to be minimized.","","            ``fun(x) -> float``","","        where ``x`` is an array with shape (n,).","    x0 : array_like, shape (n,)","        Initial guess.","    xl : array_like, shape (n,), optional","        Lower bounds on the variables ``xl <= x``.","    xu : array_like, shape (n,), optional","        Upper bounds on the variables ``x <= xu``.","    aub : array_like, shape (m_linear_ub, n), optional","        Left-hand side matrix of the linear constraints ``aub @ x <= bub``.","    bub : array_like, shape (m_linear_ub,), optional","        Right-hand side vector of the linear constraints ``aub @ x <= bub``.","    aeq : array_like, shape (m_linear_eq, n), optional","        Left-hand side matrix of the linear constraints ``aeq @ x == beq``.","    beq : array_like, shape (m_linear_eq,), optional","        Right-hand side vector of the linear constraints ``aeq @ x == beq``.","    cub : callable, optional","        Nonlinear inequality constraint ``cub(x) <= 0``.","","            ``cub(x) -> array_like, shape (m_nonlinear_ub,)``","","        where ``x`` is an array with shape (n,).","    ceq : callable, optional","        Nonlinear equality constraint ``ceq(x) == 0``.","","            ``ceq(x) -> array_like, shape (m_nonlinear_eq,)``","","        where ``x`` is an array with shape (n,).","    m_nonlinear_ub : int, optional","        Number of nonlinear inequality constraints.","    m_nonlinear_eq : int, optional","        Number of nonlinear equality constraints.","","    Raises","    ------","    ValueError","        If an argument received an invalid value.","    %}","","    properties (Dependent)","","        fun","","    end","","    properties (GetAccess = public, SetAccess = private)","","        x0","        xl = []","        xu = []","        aub = []","        bub = []","        aeq = []","        beq = []","","    end","","    properties (Dependent)","","        cub","        ceq","","    end","","    properties (GetAccess = public, SetAccess = private)","","        m_nonlinear_ub = []","        m_nonlinear_eq = []","","    end","","    properties (Dependent)","","        n","        m_linear_ub","        m_linear_eq","","    end","","    properties (Access = private)","","        fun_","        cub_","        ceq_","","    end","","    methods","","        function obj = Problem(varargin)","            if nargin < 1","                error(\"MATLAB:Problem:MissingArguments\", \"At least one argument is required.\")","            end","        ","            if isstruct(varargin{1})","                % Handle the case when a struct is passed","                s = varargin{1};","        ","                % Check if the struct contains the required fields","                if ~isfield(s, 'fun') || ~isfield(s, 'x0')","                    error(\"MATLAB:Problem:MissingFields\", \"The `fun` and `x0` fields are required.\")","                end","                obj.fun_ = s.fun;","","                % Check if the struct contains `cub` and `ceq` fields","                if isfield(s, 'cub')","                    obj.cub_ = s.cub;","                end","                if isfield(s, 'ceq')","                    obj.ceq_ = s.ceq;","                end","        ","                % Iterate over the struct's fields and assign them to the object's properties","                fields = fieldnames(s);","                for i = 1:numel(fields)","                    if strcmp(fields{i}, 'fun') || strcmp(fields{i}, 'cub') || strcmp(fields{i}, 'ceq')","                        continue","                    end","                    obj.(fields{i}) = s.(fields{i});","                end","            else","                error(\"MATLAB:Problem:NotStruct\", \"Invalid input. A struct argument is expected.\")","            end","","            % Check that the arguments are consistent.","","            % Check that `xl` has the same size as `x0`.","            if numel(obj.xl) ~= obj.n","                error(\"MATLAB:Problem:xl_x0_NotConsistent\", \"The argument `xl` must have size %d.\", obj.n);","            end","            % Check that `xu` has the same size as `x0`.","            if numel(obj.xu) ~= obj.n","                error(\"MATLAB:Problem:xu_x0_NotConsistent\", \"The argument `xu` must have size %d.\", obj.n);","            end","            % Check that `aub` is a matrix with shape (m_linear_ub, n).","            if ~isequal(size(obj.aub), [obj.m_linear_ub, obj.n])","                error(\"MATLAB:Problem:aub_m_linear_ub_n_NotConsistent\", \"The argument `aub` must have shape (%d, %d).\", obj.m_linear_ub, obj.n);","            end","            % Check that `aeq` is a matrix with shape (m_linear_eq, n).","            if ~isequal(size(obj.aeq), [obj.m_linear_eq, obj.n])","                error(\"MATLAB:Problem:aeq_m_linear_eq_n_NotConsistent\", \"The argument `aeq` must have shape (%d, %d).\", obj.m_linear_eq, obj.n);","            end","            % Check that whether `m_nonlinear_ub` is empty or zero if `cub` is empty.","            if isempty(obj.cub_) && ~isempty(obj.m_nonlinear_ub) && obj.m_nonlinear_ub > 0","                error(\"MATLAB:Problem:m_nonlinear_ub_cub_NotConsistent\", \"The argument `m_nonlinear_ub` must be empty or zero if the argument `cub` is empty.\");","            end","            % Check that whether `m_nonlinear_eq` is empty or zero if `ceq` is empty.","            if isempty(obj.ceq_) && ~isempty(obj.m_nonlinear_eq) && obj.m_nonlinear_eq > 0","                error(\"MATLAB:Problem:m_nonlinear_eq_ceq_NotConsistent\", \"The argument `m_nonlinear_eq` must be empty or zero if the argument `ceq` is empty.\");","            end","        end","","","","        % Setter functions.","","        % Preprocess the initial guess.","        function obj = set.x0(obj, value)","            if ~isvector(value)","                error(\"The argument `x0` must be a one-dimensional array.\")","            end","            obj.x0 = reshape(value, [], 1);","        end","","        % Preprocess the objective function.","        function obj = set.fun_(obj, fun)","            % This function only accepts a new function handle.","            if ~isa(fun, \"function_handle\")","                error(\"The argument `fun` must be a function handle.\")","            end","            % Check if `fun` can accept only one argument.","            if nargin(fun) ~= 1","                error(\"The function must accept exactly one argument.\")","            end","            % Try to assign `fun` to the object's `fun` field.","            try","                obj.fun_ = fun;","            catch","                error(\"Error occurred while assigning `fun` field. Please check the input.\")","            end","        end","","        % Preprocess the bound constraints.","        function obj = set.xl(obj, xl)","            if ~isempty(xl)","                if ~isvector(xl)","                    error(\"The argument `xl` must be a one-dimensional array.\")","                end","                obj.xl = reshape(xl, [], 1);","            else","                obj.xl = [];","            end","        end","","        function obj = set.xu(obj, xu)","            if ~isempty(xu)","                if ~isvector(xu)","                    error(\"The argument `xu` must be a one-dimensional array.\")","                end","                obj.xu = reshape(xu, [], 1);","            else","                obj.xu = [];","            end","        end","","        % Preprocess the linear constraints.","        function obj = set.aub(obj, aub)","            if ~isempty(aub)","                if ~ismatrix(aub)","                    error(\"The argument `aub` must be a two-dimensional array.\")","                end","                obj.aub = aub;","            else","                obj.aub = [];","            end","        end","","        function obj = set.bub(obj, bub)","            if ~isempty(bub)","                if ~isvector(bub)","                    error(\"The argument `bub` must be a one-dimensional array.\")","                end","                obj.bub = reshape(bub, [], 1);","            else","                obj.bub = [];","            end","        end","","        function obj = set.aeq(obj, aeq)","            if ~isempty(aeq)","                if ~ismatrix(aeq)","                    error(\"The argument `aeq` must be a two-dimensional array.\")","                end","                obj.aeq = aeq;","            else","                obj.aeq = [];","            end","        end","","        function obj = set.beq(obj, beq)","            if ~isempty(beq)","                if ~isvector(beq)","                    error(\"The argument `beq` must be a one-dimensional array.\")","                end","                obj.beq = reshape(beq, [], 1);","            else","                obj.beq = [];","            end","        end","","        % Preprocess the nonlinear constraints.","        function obj = set.cub_(obj, cub)","            if ~isempty(cub)","                if ~isa(cub, \"function_handle\")","                    error(\"The argument `cub` must be a function handle.\")","                end","                try","                    obj.cub_ = cub;","                catch","                    error(\"Error occurred while assigning `cub` field. Please check the input.\");","                end","            else","                obj.cub_ = [];","            end","        end","","        function obj = set.ceq_(obj, ceq)","            if ~isempty(ceq)","                if ~isa(ceq, \"function_handle\")","                    error(\"The argument `ceq` must be a function handle.\")","                end","                try","                    obj.ceq_ = ceq;","                catch","                    error(\"Error occurred while assigning `ceq` field. Please check the input.\");","                end","            else","                obj.ceq_ = [];","            end","        end","","        % Preprocess the number of nonlinear constraints.","        function obj = set.m_nonlinear_ub(obj, m_nonlinear_ub)","            if ~isempty(m_nonlinear_ub)","                if ~(isnumeric(m_nonlinear_ub) && m_nonlinear_ub >= 0 && mod(m_nonlinear_ub, 1) == 0)","                    error('The argument `m_nonlinear_ub` must be a nonnegative integer.')","                end","                obj.m_nonlinear_ub = m_nonlinear_ub;","            else","                obj.m_nonlinear_ub = [];","            end","        end","","        function obj = set.m_nonlinear_eq(obj, m_nonlinear_eq)","            if ~isempty(m_nonlinear_eq)","                if ~(isnumeric(m_nonlinear_eq) && m_nonlinear_eq >= 0 && mod(m_nonlinear_eq, 1) == 0)","                    error('The argument `m_nonlinear_eq` must be a nonnegative integer.')","                end","                obj.m_nonlinear_eq = m_nonlinear_eq;","            else","                obj.m_nonlinear_eq = [];","            end","        end","","        % Getter functions for dependent properties.","","        function value = get.n(obj)","            value = numel(obj.x0);","        end","","        function value = get.m_linear_ub(obj)","            value = numel(obj.bub);","        end","","        function value = get.m_linear_eq(obj)","            value = numel(obj.beq);","        end","","        function value = get.fun(obj)","            value = @(x) obj.FUN(x);","        end","","        function value = get.cub(obj)","            value = @(x) obj.CUB(x);","        end","    ","        function value = get.ceq(obj)","            value = @(x) obj.CEQ(x);","        end","","        % Other getter functions.","","        function value = get.m_nonlinear_ub(obj)","            if isempty(obj.m_nonlinear_ub)","                if isempty(obj.cub_)","                    value = 0;","                else","                    error('The number of nonlinear inequality constraints is unknown.');","                end","            else","                value = obj.m_nonlinear_ub;","            end","        end","","        function value = get.m_nonlinear_eq(obj)","            if isempty(obj.m_nonlinear_eq)","                if isempty(obj.ceq_)","                    value = 0;","                else","                    error('The number of nonlinear equality constraints is unknown.');","                end","            else","                value = obj.m_nonlinear_eq;","            end","        end        ","","        function value = get.xl(obj)","            if isempty(obj.xl)","                value = -inf(obj.n, 1);","            else","                value = obj.xl;","            end","        end","    ","        function value = get.xu(obj)","            if isempty(obj.xu)","                value = inf(obj.n, 1);","            else","                value = obj.xu;","            end","        end","    ","        function value = get.aub(obj)","            if isempty(obj.aub)","                value = NaN(0, obj.n);","            else","                value = obj.aub;","            end","        end","    ","        function value = get.bub(obj)","            if isempty(obj.bub)","                value = NaN(0, 1);","            else","                value = obj.bub;","            end","        end","    ","        function value = get.aeq(obj)","            if isempty(obj.aeq)","                value = NaN(0, obj.n);","            else","                value = obj.aeq;","            end","        end","    ","        function value = get.beq(obj)","            if isempty(obj.beq)","                value = NaN(0, 1);","            else","                value = obj.beq;","            end","        end","","        % Other functions.","","        % function cv = maxcv(obj, x)","        %     % Evaluate the maximum constraint violation.","            ","        %     % Initialize cv to 0","        %     cv = 0;","            ","        %     % Check lower bound constraint violation","        %     cv = max(max(obj.xl - x), cv);","            ","        %     % Check upper bound constraint violation","        %     cv = max(max(x - obj.xu), cv);","            ","        %     % Check linear inequality constraint violation","        %     cv = max(max(obj.aub * x - obj.bub), cv);","            ","        %     % Check linear equality constraint violation","        %     cv = max(max(abs(obj.aeq * x - obj.beq)), cv);","            ","        %     % Check nonlinear inequality constraint violation","        %     cv = max(max(obj.cub(x)), cv);","            ","        %     % Check nonlinear equality constraint violation","        %     cv = max(max(abs(obj.ceq(x))), cv);","        % end","    end","","    % Private methods.","    methods (Access = private)","","        function f = FUN(obj, x)","            % Check if x is a one-dimensional vector.","            if ~isvector(x)","                error(\"The input `x` must be a one-dimensional vector.\")","            end","","            if numel(x) ~= obj.n","                error(\"The input `x` must have size %d.\", obj.n)","            end","","            FUN = obj.fun_;","            try","                % Try to evaluate the function at x.","                f = FUN(x);","            catch ME","                % If an error occurred, issue a warning and set f to NaN.","                warning(ME.identifier, '%s', ME.message);","                f = NaN;","            end","","            try","                f = double(f);","            catch ME","                % If an error occurred, issue a warning and set f to NaN.","                warning(ME.identifier, '%s', ME.message);","                f = NaN;","            end","","            if ~(isnumeric(f) || islogical(f))","                % Check if the output is a float/int/boolean. If not, set f to NaN.","                f = NaN;","            end","        end","","        function f = CUB(obj, x)","            if ~isvector(x)","                error(\"The input `x` must be a one-dimensional vector.\")","            end","","            if numel(x) ~= obj.n","                error(\"The input `x` must have size %d.\", obj.n)","            end","","            CUB = obj.cub_;","            if isempty(CUB)","                f = NaN(0, 1);","            else","                try","                    f = CUB(x);","                catch ME","                    warning(ME.identifier, '%s', ME.message);","                    f = NaN(obj.m_nonlinear_ub, 1);","                end","                if ~isvector(f)","                    error(\"The output of the nonlinear inequality constraint must be a one-dimensional vector.\")","                end","                try","                    f_size = size(f);","                    f = double(f);","                catch ME","                    warning(ME.identifier, '%s', ME.message);","                    f = NaN(f_size);","                end","                if ~(isnumeric(f) || islogical(f))","                    f = NaN(f_size);","                end","            end","","            if isempty(obj.m_nonlinear_ub)","                obj.m_nonlinear_ub = numel(f);","            end","            if numel(f) ~= obj.m_nonlinear_ub","                error(\"The output of the nonlinear inequality constraint must have size %d.\", obj.m_nonlinear_ub)","            end","        end","","        function f = CEQ(obj, x)","            if ~isvector(x)","                error(\"The input `x` must be a one-dimensional vector.\")","            end","","            if numel(x) ~= obj.n","                error(\"The input `x` must have size %d.\", obj.n)","            end","","            CEQ = obj.ceq_;","            if isempty(CEQ)","                f = NaN(0, 1);","            else","                try","                    f = CEQ(x);","                catch ME","                    warning(ME.identifier, '%s', ME.message);","                    f = NaN(obj.m_nonlinear_eq, 1);","                end","                if ~isvector(f)","                    error(\"The output of the nonlinear equality constraint must be a one-dimensional vector.\")","                end","                try","                    f_size = size(f);","                    f = double(f);","                catch ME","                    warning(ME.identifier, '%s', ME.message);","                    f = NaN(f_size);","                end","                if ~(isnumeric(f) || islogical(f))","                    f = NaN(f_size);","                end","            end","","            if isempty(obj.m_nonlinear_eq)","                obj.m_nonlinear_eq = numel(f);","            end","            if numel(f) ~= obj.m_nonlinear_eq","                error(\"The output of the nonlinear equality constraint must have size %d.\", obj.m_nonlinear_eq)","            end","        end","    end","","end"],"CoverageDisplayDataPerLine":{"Statement":[{"LineNumber":105,"Hits":11,"StartColumnNumbers":12,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":106,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":94,"ContinuedLine":false},{"LineNumber":109,"Hits":10,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":111,"Hits":9,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":114,"Hits":9,"StartColumnNumbers":16,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":115,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":100,"ContinuedLine":false},{"LineNumber":117,"Hits":8,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":120,"Hits":8,"StartColumnNumbers":16,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":121,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":123,"Hits":8,"StartColumnNumbers":16,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":124,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":128,"Hits":8,"StartColumnNumbers":16,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":129,"Hits":8,"StartColumnNumbers":16,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":130,"Hits":34,"StartColumnNumbers":20,"EndColumnNumbers":103,"ContinuedLine":false},{"LineNumber":131,"Hits":10,"StartColumnNumbers":24,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":133,"Hits":24,"StartColumnNumbers":20,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":136,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":98,"ContinuedLine":false},{"LineNumber":142,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":143,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":107,"ContinuedLine":false},{"LineNumber":146,"Hits":7,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":147,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":107,"ContinuedLine":false},{"LineNumber":150,"Hits":6,"StartColumnNumbers":12,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":151,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":144,"ContinuedLine":false},{"LineNumber":154,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":155,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":144,"ContinuedLine":false},{"LineNumber":158,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":90,"ContinuedLine":false},{"LineNumber":159,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":160,"ContinuedLine":false},{"LineNumber":162,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":90,"ContinuedLine":false},{"LineNumber":163,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":160,"ContinuedLine":false},{"LineNumber":173,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":174,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":75,"ContinuedLine":false},{"LineNumber":176,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":182,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":183,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":186,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":187,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":190,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":191,"Hits":8,"StartColumnNumbers":16,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":192,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":193,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":92,"ContinuedLine":false},{"LineNumber":199,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":200,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":201,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":203,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":205,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":210,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":211,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":212,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":214,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":216,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":222,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":223,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":224,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":80,"ContinuedLine":false},{"LineNumber":226,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":228,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":233,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":234,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":235,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":80,"ContinuedLine":false},{"LineNumber":237,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":239,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":244,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":245,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":246,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":80,"ContinuedLine":false},{"LineNumber":248,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":250,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":255,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":256,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":257,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":80,"ContinuedLine":false},{"LineNumber":259,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":261,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":267,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":268,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":269,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":271,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":272,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":273,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":274,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":97,"ContinuedLine":false},{"LineNumber":277,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":282,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":283,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":284,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":286,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":287,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":288,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":289,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":97,"ContinuedLine":false},{"LineNumber":292,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":298,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":299,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":101,"ContinuedLine":false},{"LineNumber":300,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":89,"ContinuedLine":false},{"LineNumber":302,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":304,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":309,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":310,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":101,"ContinuedLine":false},{"LineNumber":311,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":89,"ContinuedLine":false},{"LineNumber":313,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":315,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":322,"Hits":52,"StartColumnNumbers":12,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":326,"Hits":7,"StartColumnNumbers":12,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":330,"Hits":6,"StartColumnNumbers":12,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":334,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":338,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":342,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":348,"Hits":9,"StartColumnNumbers":12,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":349,"Hits":4,"StartColumnNumbers":16,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":350,"Hits":4,"StartColumnNumbers":20,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":352,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":88,"ContinuedLine":false},{"LineNumber":355,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":360,"Hits":7,"StartColumnNumbers":12,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":361,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":362,"Hits":2,"StartColumnNumbers":20,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":364,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":86,"ContinuedLine":false},{"LineNumber":367,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":372,"Hits":9,"StartColumnNumbers":12,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":373,"Hits":6,"StartColumnNumbers":16,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":375,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":380,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":381,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":383,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":388,"Hits":7,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":389,"Hits":4,"StartColumnNumbers":16,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":391,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":396,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":397,"Hits":4,"StartColumnNumbers":16,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":399,"Hits":4,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":404,"Hits":6,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":405,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":407,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":412,"Hits":7,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":413,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":415,"Hits":4,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":452,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":453,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":456,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":457,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":460,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":461,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":463,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":464,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":466,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":467,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":470,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":471,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":472,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":474,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":475,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":478,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":480,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":485,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":486,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":489,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":490,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":493,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":494,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":495,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":497,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":498,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":499,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":500,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":501,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":503,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":504,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":112,"ContinuedLine":false},{"LineNumber":506,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":507,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":508,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":509,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":510,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":511,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":513,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":514,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":518,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":519,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":521,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":522,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":113,"ContinuedLine":false},{"LineNumber":527,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":528,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":531,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":532,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":535,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":536,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":537,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":539,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":540,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":541,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":542,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":543,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":545,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":546,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":110,"ContinuedLine":false},{"LineNumber":548,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":549,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":550,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":551,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":552,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":553,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":555,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":556,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":560,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":561,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":563,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":564,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":111,"ContinuedLine":false}],"Function":[{"LineNumber":104,"Hits":11,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":172,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":180,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":198,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":209,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":221,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":232,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":243,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":254,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":266,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":281,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":297,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":308,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":321,"Hits":52,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":325,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":329,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":333,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":337,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":341,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":347,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":359,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":371,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":379,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":387,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":395,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":403,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":411,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":450,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":484,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":526,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false}]}}